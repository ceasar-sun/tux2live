#!/bin/sh

####################################################
# tux2live system builder
#
# Description: To build iso file of live system, part 3 of tux2live
# Last update :20070521
# Author:
#	Ceasar Sun <ceasar_at_nchc_org_tw>
#	
# License: GPL
####################################################

tux2mkiso () {

	local _answer;

	BUILD_SYSTEM=$(head -n 1 /etc/issue | awk '{print $1}')

	_LIVECD_ISO_NAME=$_TUX2LIVE_ISO_NAME
	[ -z "$_LIVECD_ISO_NAME" ] && _LIVECD_ISO_NAME="${_TUX2LIVE_ISO_NAME_PREFIX}-${BUILD_SYSTEM}.iso"

	# Load Tux2live setting and functions
	[ -f "$_TUX2LIVE_ROOT_DIR/conf/tux2live.conf" ] && [ -z "$_LOAD_TUX2LIVE_CONF" ] && . $_TUX2LIVE_ROOT_DIR/conf/tux2live.conf

	# Default setting (can't be changed by command-line options)
	_cdimage_skel=iso-zip.skel

	[ "$_BATCH_MODE" = 'n' ] && (echo -n "Start to create iso ? [Y/n]"; read _answer) || ( $SETCOLOR_WARNING; echo "**** Start to create iso ****"; $SETCOLOR_NORMAL )
	[ "$_answer" = "n" ] && echo "Bye !!" && exit 1;

	[ -f "$_TUX2LIVE_OUTPUT_DIR/$_iso_name" ] && echo "delete old $ISO" && rm -rf $_TUX2LIVE_OUTPUT_DIR/$_iso_name;
	[ ! -d "$_TUX2LIVE_OUTPUT_DIR/$_cdimage_skel" ] && mkdir $_TUX2LIVE_OUTPUT_DIR/$_cdimage_skel && echo "Create cdimage skel dir: $_TUX2LIVE_OUTPUT_DIR/$_cdimage_skel ..."

	echo "Check kernel, initrd and squashfs for livecd ..."
	echo -n "kernel: $_TUX2LIVE_OUTPUT_DIR/$_TUX2LIVE_LIVECD_KERNEL  ..."
	if [ -f "$_TUX2LIVE_OUTPUT_DIR/$_TUX2LIVE_LIVECD_KERNEL" ]; then echo "	ok"
	else $SETCOLOR_FAILURE; echo "MISS !!"; $SETCOLOR_NORMAL ; exit 1;
	fi 

	echo -n "initrd: $_TUX2LIVE_OUTPUT_DIR/$_TUX2LIVE_LIVECD_INITRD  ..."
	if [ -f "$_TUX2LIVE_OUTPUT_DIR/$_TUX2LIVE_LIVECD_INITRD" ]; then echo "	ok"
	else $SETCOLOR_FAILURE; echo "MISS !!"; $SETCOLOR_NORMAL ; exit 1;
	fi 

	echo -n "rootfs: $_TUX2LIVE_OUTPUT_DIR/$_TUX2LIVE_ISO_SQUASHFS  ..."
	if [ -f "$_TUX2LIVE_OUTPUT_DIR/$_TUX2LIVE_ISO_SQUASHFS" ]; then echo "	ok"
	else $SETCOLOR_FAILURE; echo "MISS !!"; $SETCOLOR_NORMAL ; exit 1;
	fi 

	echo "Prepare cdimage files ..."
	_comm_line="$__RSYNC_COMM -a --delete $_VERBOSE $_TUX2LIVE_ROOT_DIR/$_cdimage_skel/ $_TUX2LIVE_OUTPUT_DIR/$_cdimage_skel/"
	[ "$_DEBUG" == "y" ] && DEBUG_MESSAGE "$_comm_line"
	$_comm_line
	WAIT_UNTIL_COMM $_comm_line
	
	# Prepare cdimage skel stuff
	cat > $_TUX2LIVE_OUTPUT_DIR/$_cdimage_skel/Tux2Live-CD-Env<<EOF
# This file generated by sub process "--mkiso" automatically
TUX2LIVE_VERSION="$_TUX2LIVE_VERSION"
USERNAME="$_TUX2LIVE_LIVECD_USERNAME"
HOSTNAME="$_TUX2LIVE_LIVECD_HOSTNAME"
BUILD_SYSTEM="$_TUX2LIVE_BUILD_SYSTEM"
ROOTFS_METHOD="$_TUX2LIVE_ROOTFS_METHOD"
EOF
	
	# copy documents into live environment
	cp -af $_TUX2LIVE_ROOT_DIR/doc $_TUX2LIVE_OUTPUT_DIR/$_cdimage_skel/

	# Add distro and software version information into boot 'LABEL'
	sed -i -e "s/[[:space:]]\{1,\}\[_DISTRIB_ID\][[:space:]]\{1,\}/ $BUILD_SYSTEM /g" -e "s/[[:space:]]\{1,\}\[_TUX2LIVE_VERSION\]/ v$_TUX2LIVE_VERSION/g" $_TUX2LIVE_OUTPUT_DIR/$_cdimage_skel/syslinux/syslinux.cfg

	# use 'cp' to keep the original component
	cp -f $_VERBOSE $_TUX2LIVE_OUTPUT_DIR/$_TUX2LIVE_LIVECD_KERNEL $_TUX2LIVE_OUTPUT_DIR/$_cdimage_skel/boot/
	cp -f $_VERBOSE $_TUX2LIVE_OUTPUT_DIR/$_TUX2LIVE_LIVECD_INITRD $_TUX2LIVE_OUTPUT_DIR/$_cdimage_skel/boot/
	cp -f $_VERBOSE $_TUX2LIVE_OUTPUT_DIR/$_TUX2LIVE_ISO_SQUASHFS $_TUX2LIVE_OUTPUT_DIR/$_cdimage_skel/casper/

	if [ "$_TUX2LIVE_ROOTFS_METHOD" = "aufs" ]; then 
		# rename folder 'casper' to 'live' in live environment
		mv $_TUX2LIVE_OUTPUT_DIR/$_cdimage_skel/casper $_TUX2LIVE_OUTPUT_DIR/$_cdimage_skel/live
		# replace 'casper' method to 'live'
		sed -i -e "s/[[:space:]]\{1,\}boot=casper[[:space:]]\{1,\}/ boot=live username=$_TUX2LIVE_LIVECD_USERNAME /g" $_TUX2LIVE_OUTPUT_DIR/$_cdimage_skel/syslinux/syslinux.cfg
	else	
		sed -i -e "s/[[:space:]]\{1,\}splash[[:space:]]\{1,\}/ /g"
	fi
	# replace /syslinux.cfg with defauft boot parameter from tux2live.conf
	sed -i -e "s/\[_MKISO_DEF_BOOT_PARA\]/ $_MKISO_DEF_BOOT_PARA /g" $_TUX2LIVE_OUTPUT_DIR/$_cdimage_skel/syslinux/syslinux.cfg
	

	# make iso
	_comm_line="$__MKISOFS_COMM -o $_TUX2LIVE_OUTPUT_DIR/$_LIVECD_ISO_NAME \
$_MKISO_MKISOFS_OPT_EXTRA  -V $_TUX2LIVE_PNAME \
-b syslinux/isolinux.bin -c syslinux/boot.cat -R -r $_TUX2LIVE_OUTPUT_DIR/$_cdimage_skel"
	[ "$_DEBUG" == "y" ] && DEBUG_MESSAGE "$_comm_line"
	$_comm_line
	WAIT_UNTIL_COMM $_comm_line

	# clean CD image skeleton if not debug mode
	[ "$_DEBUG" == "y" ] || rm -rf "$_TUX2LIVE_OUTPUT_DIR/$_cdimage_skel"
	[ "$PURGE" = "y" ] && (echo "Clean all input files :'$_TUX2LIVE_LIVECD_KERNEL','$_TUX2LIVE_LIVECD_INITRD'" ; rm -rf "$_TUX2LIVE_OUTPUT_DIR/$_TUX2LIVE_LIVECD_KERNEL" "$_TUX2LIVE_OUTPUT_DIR/$_TUX2LIVE_LIVECD_INITRD" )

	echo "ISO generated in $_TUX2LIVE_OUTPUT_DIR/$_LIVECD_ISO_NAME"
	return 0;
}
